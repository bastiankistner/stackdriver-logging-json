"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LABELS_FOR_RESOURCES = void 0;
// prettier-ignore
exports.LABELS_FOR_RESOURCES = {
    api: ['project_id', 'service', 'method', 'version', 'location'],
    'apigee.googleapis.com/Environment': ['resource_container', 'org', 'env', 'location'],
    app_script_function: ['project_id', 'invocation_type', 'function_name'],
    assistant_action: ['project_id', 'version_id', 'action_id'],
    audited_resource: ['project_id', 'service', 'method'],
    aws_ec2_instance: ['project_id', 'instance_id', 'aws_account', 'region'],
    aws_elb_load_balancer: ['project_id', 'region', 'name', 'aws_account'],
    bigquery_biengine_model: ['project_id', 'location', 'model_id'],
    bigquery_dataset: ['project_id', 'dataset_id'],
    bigquery_dts_config: ['project_id', 'location', 'config_id'],
    bigquery_dts_run: ['project_id', 'location', 'config_id', 'run_id'],
    bigquery_project: ['project_id', 'location'],
    bigquery_resource: ['project_id'],
    bigquery_table: ['project_id', 'dataset_id', 'table_id'],
    billing_account: ['project_id', 'account_id'],
    build: ['project_id', 'build_id', 'build_trigger_id'],
    client_auth_config_brand: ['project_id', 'brand_id'],
    client_auth_config_client: ['project_id', 'client_id'],
    cloud_composer_environment: ['project_id', 'location', 'environment_name'],
    cloud_dataproc_cluster: ['project_id', 'cluster_name', 'cluster_uuid', 'region'],
    cloud_dataproc_job: ['project_id', 'region', 'job_id', 'job_uuid'],
    cloud_debugger_resource: ['project_id', 'app'],
    cloud_function: ['project_id', 'function_name', 'region'],
    cloud_run_revision: ['project_id', 'service_name', 'revision_name', 'location', 'configuration_name'],
    cloud_scheduler_job: ['project_id', 'location', 'job_id'],
    cloud_tasks_queue: ['project_id', 'queue_id', 'target_type'],
    cloudiot_device: ['project_id', 'device_num_id', 'device_registry_id', 'location'],
    cloudiot_device_registry: ['project_id', 'device_registry_id', 'location'],
    cloudkms_cryptokey: ['project_id', 'location', 'key_ring_id', 'crypto_key_id'],
    cloudkms_cryptokeyversion: ['project_id', 'location', 'key_ring_id', 'crypto_key_id', 'crypto_key_version_id'],
    cloudkms_keyring: ['project_id', 'location', 'key_ring_id'],
    cloudml_model_version: ['project_id', 'model_id', 'version_id', 'region'],
    cloudsql_database: ['project_id', 'database_id', 'region'],
    'cloudvolumesgcp-api.netapp.com/NetAppCloudVolumeSO': ['resource_container', 'location', 'volume_id'],
    consumed_api: ['project_id', 'service', 'method', 'version', 'credential_id', 'location'],
    container: ['project_id', 'cluster_name', 'namespace_id', 'instance_id', 'pod_id', 'container_name', 'zone'],
    csr_repository: ['project_id', 'name'],
    dataflow_step: ['project_id', 'job_id', 'step_id', 'job_name', 'region'],
    dataproc_cluster: ['project_id', 'cluster_id', 'zone'],
    datastore_database: ['project_id', 'database_id'],
    datastore_index: ['project_id', 'database_id', 'index_id'],
    deployment: ['project_id', 'name'],
    deployment_manager_manifest: ['project_id', 'manifest_name', 'deployment_name'],
    deployment_manager_operation: ['project_id', 'operation_name'],
    deployment_manager_resource: ['project_id', 'resource_name', 'deployment_name'],
    deployment_manager_type: ['project_id', 'name'],
    dns_managed_zone: ['project_id', 'zone_name', 'location'],
    dns_policy: ['project_id', 'policy_name', 'location'],
    dns_query: ['project_id', 'target_name', 'location', 'target_type', 'source_type'],
    'fleetengine.googleapis.com/Fleet': ['resource_container', 'location'],
    folder: ['folder_id'],
    gae_app: ['project_id', 'module_id', 'version_id', 'zone'],
    gce_autoscaler: ['project_id', 'autoscaler_id', 'location'],
    gce_backend_bucket: ['project_id', 'backend_bucket_id'],
    gce_backend_service: ['project_id', 'backend_service_id', 'location'],
    gce_client_ssl_policy: ['project_id', 'client_ssl_policy_id'],
    gce_commitment: ['project_id', 'commitment_id', 'location'],
    gce_disk: ['project_id', 'disk_id', 'zone'],
    gce_firewall_rule: ['project_id', 'firewall_rule_id'],
    gce_forwarding_rule: ['project_id', 'forwarding_rule_id', 'region'],
    gce_health_check: ['project_id', 'health_check_id'],
    gce_image: ['project_id', 'image_id'],
    gce_instance: ['project_id', 'instance_id', 'zone'],
    gce_instance_group: ['project_id', 'instance_group_id', 'instance_group_name', 'location'],
    gce_instance_group_manager: ['project_id', 'instance_group_manager_id', 'instance_group_manager_name', 'location'],
    gce_instance_template: ['project_id', 'instance_template_id', 'instance_template_name'],
    gce_license: ['project_id', 'license_id'],
    gce_network: ['project_id', 'network_id'],
    gce_network_endpoint_group: ['project_id', 'zone', 'network_endpoint_group_id'],
    gce_node_group: ['project_id', 'node_group_id', 'zone'],
    gce_node_template: ['project_id', 'node_template_id', 'region'],
    gce_operation: ['project_id', 'operation_name', 'location'],
    gce_packet_mirroring: ['project_id', 'packet_mirroring_id', 'region'],
    gce_project: ['project_id'],
    gce_reserved_address: ['project_id', 'reserved_address_id', 'location'],
    gce_resource_policy: ['project_id', 'resource_policy_id', 'region'],
    gce_route: ['project_id', 'route_id'],
    gce_router: ['project_id', 'router_id', 'region'],
    gce_snapshot: ['project_id', 'snapshot_id'],
    gce_ssl_certificate: ['project_id', 'ssl_certificate_id', 'ssl_certificate_name'],
    gce_subnetwork: ['project_id', 'subnetwork_id', 'subnetwork_name', 'location'],
    gce_target_http_instance: ['project_id', 'target_http_instance_id', 'zone'],
    gce_target_http_proxy: ['project_id', 'target_http_proxy_id'],
    gce_target_https_proxy: ['project_id', 'target_https_proxy_id'],
    gce_target_pool: ['project_id', 'target_pool_id', 'zone'],
    gce_target_ssl_proxy: ['project_id', 'target_ssl_proxy_id'],
    gce_url_map: ['project_id', 'url_map_id'],
    gcs_bucket: ['project_id', 'bucket_name', 'location'],
    generic_node: ['project_id', 'location', 'namespace', 'node_id'],
    generic_task: ['project_id', 'location', 'namespace', 'job', 'task_id'],
    genomics_dataset: ['project_id', 'dataset_id'],
    genomics_operation: ['project_id', 'operation_id'],
    gke_cluster: ['project_id', 'cluster_name', 'location'],
    gke_nodepool: ['project_id', 'nodepool_name', 'location', 'cluster_name'],
    global: ['project_id'],
    healthcare_annotation_store: ['project_id', 'location', 'dataset_id', 'annotation_store_id'],
    healthcare_consent_store: ['project_id', 'location', 'dataset_id', 'consent_store_id'],
    healthcare_dataset: ['project_id', 'location', 'dataset_id'],
    healthcare_dicom_store: ['project_id', 'location', 'dataset_id', 'dicom_store_id'],
    healthcare_fhir_store: ['project_id', 'location', 'dataset_id', 'fhir_store_id'],
    healthcare_hl7v2_store: ['project_id', 'location', 'dataset_id', 'hl7v2_store_id'],
    http_load_balancer: ['project_id', 'forwarding_rule_name', 'url_map_name', 'target_proxy_name', 'backend_service_name', 'zone'],
    iam_role: ['project_id', 'role_name'],
    identitytoolkit_project: ['project_id'],
    identitytoolkit_tenant: ['project_id', 'tenant_name'],
    k8s_cluster: ['project_id', 'location', 'cluster_name'],
    k8s_container: ['project_id', 'location', 'cluster_name', 'namespace_name', 'pod_name', 'container_name'],
    k8s_node: ['project_id', 'location', 'cluster_name', 'node_name'],
    k8s_pod: ['project_id', 'location', 'cluster_name', 'namespace_name', 'pod_name'],
    logging_exclusion: ['project_id', 'name'],
    logging_log: ['project_id', 'name'],
    logging_sink: ['project_id', 'name', 'destination'],
    managed_service: ['project_id', 'service_name', 'producer_project_id'],
    metric: ['project_id', 'name'],
    ml_job: ['project_id', 'job_id', 'task_name'],
    nat_gateway: ['project_id', 'region', 'router_id', 'gateway_name'],
    network_security_policy: ['project_id', 'policy_name'],
    organization: ['organization_id'],
    project: ['project_id'],
    pubsub_snapshot: ['project_id', 'snapshot_id'],
    pubsub_subscription: ['project_id', 'subscription_id'],
    pubsub_topic: ['project_id', 'topic_id'],
    recommender: ['project_id', 'recommender_id', 'location'],
    recommender_insight_type: ['project_id', 'insight_type_id', 'location'],
    redis_instance: ['project_id', 'region', 'instance_id', 'node_id'],
    reported_errors: ['project_id'],
    service_account: ['project_id', 'email_id', 'unique_id'],
    service_config: ['project_id', 'service_name', 'service_config_id'],
    service_rollout: ['project_id', 'service_name', 'rollout_id'],
    servicedirectory_namespace: ['project_id', 'location', 'namespace_name'],
    serviceusage_service: ['project_id', 'service_name'],
    serviceuser_service: ['project_id', 'service_name'],
    spanner_instance: ['project_id', 'instance_id', 'location', 'instance_config'],
    testservice_matrix: ['project_id', 'matrix_id'],
    threat_detector: ['project_id', 'detector_name'],
    uptime_url: ['project_id', 'host'],
    vpc_access_connector: ['project_id', 'location', 'connector_name'],
    vpn_gateway: ['project_id', 'gateway_id', 'region'],
    vpn_tunnel: ['project_id', 'tunnel_id', 'tunnel_name', 'location'],
};
//# sourceMappingURL=resources.js.map