export declare const LABELS_FOR_RESOURCES: {
    readonly api: readonly ["project_id", "service", "method", "version", "location"];
    readonly 'apigee.googleapis.com/Environment': readonly ["resource_container", "org", "env", "location"];
    readonly app_script_function: readonly ["project_id", "invocation_type", "function_name"];
    readonly assistant_action: readonly ["project_id", "version_id", "action_id"];
    readonly audited_resource: readonly ["project_id", "service", "method"];
    readonly aws_ec2_instance: readonly ["project_id", "instance_id", "aws_account", "region"];
    readonly aws_elb_load_balancer: readonly ["project_id", "region", "name", "aws_account"];
    readonly bigquery_biengine_model: readonly ["project_id", "location", "model_id"];
    readonly bigquery_dataset: readonly ["project_id", "dataset_id"];
    readonly bigquery_dts_config: readonly ["project_id", "location", "config_id"];
    readonly bigquery_dts_run: readonly ["project_id", "location", "config_id", "run_id"];
    readonly bigquery_project: readonly ["project_id", "location"];
    readonly bigquery_resource: readonly ["project_id"];
    readonly bigquery_table: readonly ["project_id", "dataset_id", "table_id"];
    readonly billing_account: readonly ["project_id", "account_id"];
    readonly build: readonly ["project_id", "build_id", "build_trigger_id"];
    readonly client_auth_config_brand: readonly ["project_id", "brand_id"];
    readonly client_auth_config_client: readonly ["project_id", "client_id"];
    readonly cloud_composer_environment: readonly ["project_id", "location", "environment_name"];
    readonly cloud_dataproc_cluster: readonly ["project_id", "cluster_name", "cluster_uuid", "region"];
    readonly cloud_dataproc_job: readonly ["project_id", "region", "job_id", "job_uuid"];
    readonly cloud_debugger_resource: readonly ["project_id", "app"];
    readonly cloud_function: readonly ["project_id", "function_name", "region"];
    readonly cloud_run_revision: readonly ["project_id", "service_name", "revision_name", "location", "configuration_name"];
    readonly cloud_scheduler_job: readonly ["project_id", "location", "job_id"];
    readonly cloud_tasks_queue: readonly ["project_id", "queue_id", "target_type"];
    readonly cloudiot_device: readonly ["project_id", "device_num_id", "device_registry_id", "location"];
    readonly cloudiot_device_registry: readonly ["project_id", "device_registry_id", "location"];
    readonly cloudkms_cryptokey: readonly ["project_id", "location", "key_ring_id", "crypto_key_id"];
    readonly cloudkms_cryptokeyversion: readonly ["project_id", "location", "key_ring_id", "crypto_key_id", "crypto_key_version_id"];
    readonly cloudkms_keyring: readonly ["project_id", "location", "key_ring_id"];
    readonly cloudml_model_version: readonly ["project_id", "model_id", "version_id", "region"];
    readonly cloudsql_database: readonly ["project_id", "database_id", "region"];
    readonly 'cloudvolumesgcp-api.netapp.com/NetAppCloudVolumeSO': readonly ["resource_container", "location", "volume_id"];
    readonly consumed_api: readonly ["project_id", "service", "method", "version", "credential_id", "location"];
    readonly container: readonly ["project_id", "cluster_name", "namespace_id", "instance_id", "pod_id", "container_name", "zone"];
    readonly csr_repository: readonly ["project_id", "name"];
    readonly dataflow_step: readonly ["project_id", "job_id", "step_id", "job_name", "region"];
    readonly dataproc_cluster: readonly ["project_id", "cluster_id", "zone"];
    readonly datastore_database: readonly ["project_id", "database_id"];
    readonly datastore_index: readonly ["project_id", "database_id", "index_id"];
    readonly deployment: readonly ["project_id", "name"];
    readonly deployment_manager_manifest: readonly ["project_id", "manifest_name", "deployment_name"];
    readonly deployment_manager_operation: readonly ["project_id", "operation_name"];
    readonly deployment_manager_resource: readonly ["project_id", "resource_name", "deployment_name"];
    readonly deployment_manager_type: readonly ["project_id", "name"];
    readonly dns_managed_zone: readonly ["project_id", "zone_name", "location"];
    readonly dns_policy: readonly ["project_id", "policy_name", "location"];
    readonly dns_query: readonly ["project_id", "target_name", "location", "target_type", "source_type"];
    readonly 'fleetengine.googleapis.com/Fleet': readonly ["resource_container", "location"];
    readonly folder: readonly ["folder_id"];
    readonly gae_app: readonly ["project_id", "module_id", "version_id", "zone"];
    readonly gce_autoscaler: readonly ["project_id", "autoscaler_id", "location"];
    readonly gce_backend_bucket: readonly ["project_id", "backend_bucket_id"];
    readonly gce_backend_service: readonly ["project_id", "backend_service_id", "location"];
    readonly gce_client_ssl_policy: readonly ["project_id", "client_ssl_policy_id"];
    readonly gce_commitment: readonly ["project_id", "commitment_id", "location"];
    readonly gce_disk: readonly ["project_id", "disk_id", "zone"];
    readonly gce_firewall_rule: readonly ["project_id", "firewall_rule_id"];
    readonly gce_forwarding_rule: readonly ["project_id", "forwarding_rule_id", "region"];
    readonly gce_health_check: readonly ["project_id", "health_check_id"];
    readonly gce_image: readonly ["project_id", "image_id"];
    readonly gce_instance: readonly ["project_id", "instance_id", "zone"];
    readonly gce_instance_group: readonly ["project_id", "instance_group_id", "instance_group_name", "location"];
    readonly gce_instance_group_manager: readonly ["project_id", "instance_group_manager_id", "instance_group_manager_name", "location"];
    readonly gce_instance_template: readonly ["project_id", "instance_template_id", "instance_template_name"];
    readonly gce_license: readonly ["project_id", "license_id"];
    readonly gce_network: readonly ["project_id", "network_id"];
    readonly gce_network_endpoint_group: readonly ["project_id", "zone", "network_endpoint_group_id"];
    readonly gce_node_group: readonly ["project_id", "node_group_id", "zone"];
    readonly gce_node_template: readonly ["project_id", "node_template_id", "region"];
    readonly gce_operation: readonly ["project_id", "operation_name", "location"];
    readonly gce_packet_mirroring: readonly ["project_id", "packet_mirroring_id", "region"];
    readonly gce_project: readonly ["project_id"];
    readonly gce_reserved_address: readonly ["project_id", "reserved_address_id", "location"];
    readonly gce_resource_policy: readonly ["project_id", "resource_policy_id", "region"];
    readonly gce_route: readonly ["project_id", "route_id"];
    readonly gce_router: readonly ["project_id", "router_id", "region"];
    readonly gce_snapshot: readonly ["project_id", "snapshot_id"];
    readonly gce_ssl_certificate: readonly ["project_id", "ssl_certificate_id", "ssl_certificate_name"];
    readonly gce_subnetwork: readonly ["project_id", "subnetwork_id", "subnetwork_name", "location"];
    readonly gce_target_http_instance: readonly ["project_id", "target_http_instance_id", "zone"];
    readonly gce_target_http_proxy: readonly ["project_id", "target_http_proxy_id"];
    readonly gce_target_https_proxy: readonly ["project_id", "target_https_proxy_id"];
    readonly gce_target_pool: readonly ["project_id", "target_pool_id", "zone"];
    readonly gce_target_ssl_proxy: readonly ["project_id", "target_ssl_proxy_id"];
    readonly gce_url_map: readonly ["project_id", "url_map_id"];
    readonly gcs_bucket: readonly ["project_id", "bucket_name", "location"];
    readonly generic_node: readonly ["project_id", "location", "namespace", "node_id"];
    readonly generic_task: readonly ["project_id", "location", "namespace", "job", "task_id"];
    readonly genomics_dataset: readonly ["project_id", "dataset_id"];
    readonly genomics_operation: readonly ["project_id", "operation_id"];
    readonly gke_cluster: readonly ["project_id", "cluster_name", "location"];
    readonly gke_nodepool: readonly ["project_id", "nodepool_name", "location", "cluster_name"];
    readonly global: readonly ["project_id"];
    readonly healthcare_annotation_store: readonly ["project_id", "location", "dataset_id", "annotation_store_id"];
    readonly healthcare_consent_store: readonly ["project_id", "location", "dataset_id", "consent_store_id"];
    readonly healthcare_dataset: readonly ["project_id", "location", "dataset_id"];
    readonly healthcare_dicom_store: readonly ["project_id", "location", "dataset_id", "dicom_store_id"];
    readonly healthcare_fhir_store: readonly ["project_id", "location", "dataset_id", "fhir_store_id"];
    readonly healthcare_hl7v2_store: readonly ["project_id", "location", "dataset_id", "hl7v2_store_id"];
    readonly http_load_balancer: readonly ["project_id", "forwarding_rule_name", "url_map_name", "target_proxy_name", "backend_service_name", "zone"];
    readonly iam_role: readonly ["project_id", "role_name"];
    readonly identitytoolkit_project: readonly ["project_id"];
    readonly identitytoolkit_tenant: readonly ["project_id", "tenant_name"];
    readonly k8s_cluster: readonly ["project_id", "location", "cluster_name"];
    readonly k8s_container: readonly ["project_id", "location", "cluster_name", "namespace_name", "pod_name", "container_name"];
    readonly k8s_node: readonly ["project_id", "location", "cluster_name", "node_name"];
    readonly k8s_pod: readonly ["project_id", "location", "cluster_name", "namespace_name", "pod_name"];
    readonly logging_exclusion: readonly ["project_id", "name"];
    readonly logging_log: readonly ["project_id", "name"];
    readonly logging_sink: readonly ["project_id", "name", "destination"];
    readonly managed_service: readonly ["project_id", "service_name", "producer_project_id"];
    readonly metric: readonly ["project_id", "name"];
    readonly ml_job: readonly ["project_id", "job_id", "task_name"];
    readonly nat_gateway: readonly ["project_id", "region", "router_id", "gateway_name"];
    readonly network_security_policy: readonly ["project_id", "policy_name"];
    readonly organization: readonly ["organization_id"];
    readonly project: readonly ["project_id"];
    readonly pubsub_snapshot: readonly ["project_id", "snapshot_id"];
    readonly pubsub_subscription: readonly ["project_id", "subscription_id"];
    readonly pubsub_topic: readonly ["project_id", "topic_id"];
    readonly recommender: readonly ["project_id", "recommender_id", "location"];
    readonly recommender_insight_type: readonly ["project_id", "insight_type_id", "location"];
    readonly redis_instance: readonly ["project_id", "region", "instance_id", "node_id"];
    readonly reported_errors: readonly ["project_id"];
    readonly service_account: readonly ["project_id", "email_id", "unique_id"];
    readonly service_config: readonly ["project_id", "service_name", "service_config_id"];
    readonly service_rollout: readonly ["project_id", "service_name", "rollout_id"];
    readonly servicedirectory_namespace: readonly ["project_id", "location", "namespace_name"];
    readonly serviceusage_service: readonly ["project_id", "service_name"];
    readonly serviceuser_service: readonly ["project_id", "service_name"];
    readonly spanner_instance: readonly ["project_id", "instance_id", "location", "instance_config"];
    readonly testservice_matrix: readonly ["project_id", "matrix_id"];
    readonly threat_detector: readonly ["project_id", "detector_name"];
    readonly uptime_url: readonly ["project_id", "host"];
    readonly vpc_access_connector: readonly ["project_id", "location", "connector_name"];
    readonly vpn_gateway: readonly ["project_id", "gateway_id", "region"];
    readonly vpn_tunnel: readonly ["project_id", "tunnel_id", "tunnel_name", "location"];
};
